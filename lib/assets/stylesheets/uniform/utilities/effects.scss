//----------------------------------------------------------------
//             Shadow
//----------------------------------------------------------------

.shadow,
.shadow-xs,
.shadow-sm,
.shadow-md,
.shadow-lg,
.shadow-outline,
.shadow-inset,
.shadow-inline{
    --shadow-opacity: 0.1;
}

@include responsive-rule('shadow-xs') {box-shadow: 0 1px 0 1px rgba(black, var(--shadow-opacity)); }
@include responsive-rule('shadow-sm') { box-shadow: 0 1px 2px rgba(black, var(--shadow-opacity)); }
@include responsive-rule('shadow') { box-shadow: 0 1px 3px rgba(black, var(--shadow-opacity)); }
@include responsive-rule('shadow-md') { box-shadow: 0 2px 6px rgba(black, var(--shadow-opacity)); }
@include responsive-rule('shadow-lg') { box-shadow: 0 2px 12px rgba(black, var(--shadow-opacity)); }
@include responsive-rule('shadow-outline') { box-shadow: 0 0 0 1px rgba(black, var(--shadow-opacity)); }

@include responsive-rule('shadow-inset') { box-shadow: inset 0 2px 4px rgba(black, var(--shadow-opacity)); }
@include responsive-rule('shadow-inline') { box-shadow: inset 0 0 0 1px rgba(black, var(--shadow-opacity)); }

//----------------------------------------------------------------
//             Opacity
//----------------------------------------------------------------
@for $i from 0 through 10 {

    @include responsive-rule('opacity-#{$i * 10}'){
        opacity: $i / 10;
    }
    @include responsive-rule('shadow-opacity-#{$i * 10}'){
        --shadow-opacity: $i / 10;
    }
    @include responsive-rule('text-opacity-#{$i * 10}'){
        --text-opacity: $i / 10;
    }
    @include responsive-rule('bg-opacity-#{$i * 10}'){
        --bg-opacity: $i / 10;
    }
    @include responsive-rule('border-opacity-#{$i * 10}'){
        --border-opacity: $i / 10;
    }
    @include responsive-rule('placeholder-opacity-#{$i * 10}'){
        --placeholder-opacity: $i / 10;
    }
}

//----------------------------------------------------------------
//             Transitions
//----------------------------------------------------------------
@each $selector, $properties in (
    none: none,
    all: all,
    colors: "background-color, border-color, color, fill, stroke",
    opacity: opacity,
    shadow: box-shadow,
    transform: transform
) {
    .transition-#{$selector}{
        transition-property: $properties;
    }
}

@for $i from 0 through 10 {
    .transition-#{$i*100}{
        transition-duration: $i * 100ms;
    }
}


//----------------------------------------------------------------
//             Transforms
//----------------------------------------------------------------
@include responsive-rule('.transform') {
    --transform-translate-x: 0 !important;
    --transform-translate-y: 0 !important;
    --transform-rotate: 0 !important;
    --transform-skew-x: 0 !important;
    --transform-skew-y: 0 !important;
    --transform-scale-x: 1 !important;
    --transform-scale-y: 1 !important;
    transform: translateX(var(--transform-translate-x))
    translateY(var(--transform-translate-y))
    rotate(var(--transform-rotate))
    skewX(var(--transform-skew-x))
    skewY(var(--transform-skew-y))
    scaleX(var(--transform-scale-x))
    scaleY(var(--transform-scale-y)) !important;
}
@each $deg in (0 1 2 3 6 12 45 90 180) {
    @include responsive-rule('.rotate-#{$deg}') {
        --transform-rotate: "#{$deg}deg";
    }
    @include responsive-rule('.-rotate-#{$deg}') {
        --transform-rotate: "-#{$deg}deg";
    }
}