@import 'uniform/mixins';

//----------------------------------------------------------------
//             Display
//----------------------------------------------------------------
@each $type in (
    inline
    block
    inline-block
    grid
    inline-grid
    flex
    inline-flex
    table
    table-cell
    table-row
    contents
){
    @include responsive-rule($type){ display: $type; }
}
@include responsive-rule('hide'){ display: none; }
@include pseudo-class-rule('hide', false){ display: none;}
@include responsive-rule('show'){ display: inherit; }
@include pseudo-class-rule('show', false){ display: inherit;}
@include responsive-rule('hide-empty:empty'){ display: none; }
@include pseudo-class-rule('hide-empty:empty', false){ display: none;}


//----------------------------------------------------------------
//             Float
//----------------------------------------------------------------
@include responsive-rule('.float-right'){
    float:right;
}
@include responsive-rule('.float-left'){
    float: left;
}
@include responsive-rule('.clear'){
    clear:both;
}


//----------------------------------------------------------------
//             Flex
//----------------------------------------------------------------
@include responsive-rule('flex-col'){ flex-direction: column; }
@include responsive-rule('flex-nowrap'){ flex-wrap: nowrap; }
@include responsive-rule('flex-wrap'){ flex-wrap: wrap; }

@include responsive-rule('flex-fill'){ flex: 1 1 auto; }
@include responsive-rule('flex-grow'){ flex: 1 0 auto; }
@include responsive-rule('flex-shrink'){ flex: 0 1 auto; }
@include responsive-rule('flex-none'){ flex: 0 0 auto; }

@for $i from 1 through 12 {
    @include responsive-rule('order-#{$i}'){ order: $i; }
}


//----------------------------------------------------------------
//             Grid
//----------------------------------------------------------------
@for $i from 1 through 12 {
    @include responsive-rule('cols-#{$i}'){ grid-template-columns: repeat($i, minmax(0, 1fr)); }
    @include responsive-rule('col-span-#{$i}'){ grid-column: span $i / span $i; }
    @include responsive-rule('col-start-#{$i}'){ grid-column-start: $i; }
    @include responsive-rule('col-end-#{$i}'){ grid-column-end: $i; }
}

@for $i from 0 through 100 {
    @include responsive-rule(".cols-fill-#{$i * 5}-px"){ 
        grid-template-columns: repeat(auto-fill, minmax($i * 5px, 1fr));
    };
    @include responsive-rule(".cols-fit-#{$i * 5}-px"){ 
        grid-template-columns: repeat(auto-fit, minmax($i * 5px, 1fr));
    };
}

@for $i from 1 through 6 {
    @include responsive-rule('rows-#{$i}'){ grid-template-rows: repeat($i, minmax(0, 1fr)); }
    @include responsive-rule('row-span-#{$i}'){ grid-row: span $i / span $i; }
    @include responsive-rule('row-start-#{$i}'){ grid-row-start: $i; }
    @include responsive-rule('row-end-#{$i}'){ grid-row-end: $i; }
}
@include responsive-rule('grid-flow-row'){ grid-auto-flow: row; }
@include responsive-rule('grid-flow-row-dense'){ grid-auto-flow: row dense; }
@include responsive-rule('grid-flow-col'){ grid-auto-flow: column; }
@include responsive-rule('grid-flow-column-dense'){ grid-auto-flow: column dense; }

@include size-rule('gap') using ($size) { gap: $size;}
@include size-rule('gap-h') using ($size) { column-gap: $size;}
@include size-rule('gap-v') using ($size) { row-gap: $size;}


//----------------------------------------------------------------
//             Alignment
//----------------------------------------------------------------
@each $selector, $value in (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around,
    evenly: space-evenly
) {
    @include responsive-rule('justify-content-#{$selector}') {
        justify-content: $value;
    }
    @include responsive-rule('align-content-#{$selector}') {
        align-content: $value;
    }
}
@each $selector, $value in (
    auto
    start
    end
    center
    stretch
    baseline
    flex-start
    flex-end
) {
    @include responsive-rule('justify-#{$selector}') {
        justify-items: $selector;
    }
    @include responsive-rule('align-#{$selector}') {
        align-items: $selector;
    }
}

@each $selector, $value in (
    auto
    start
    end
    center
    stretch
    flex-start
    flex-end
) {
    @include responsive-rule('justify-self-#{$selector}') {
        justify-self: $selector;
    }
    @include responsive-rule('align-self-#{$selector}') {
        align-self: $selector;
    }
}


//----------------------------------------------------------------
//             Object
//----------------------------------------------------------------
@include responsive-rule('object-cover') { object-fit: cover;}
@include responsive-rule('object-contain') { object-fit: contain;}
@include responsive-rule('object-center') { object-position: center;}


//----------------------------------------------------------------
//             Alignment
//----------------------------------------------------------------
@each $position in (
baseline
middle
top
bottom
text-top
text-bottom
) {
    @include responsive-rule('align-#{$position}') {
        vertical-align: $position;
    }
}