<div class="section">
    <h1>
        Popover
        <span class="uniformLabel -yellow-60">JS</span>
    </h1>
    <p class="text-xl text-light margin-v-2x">
        Popover is a component used by Dropdown and Select to render content anchored to an element in the document.
    </p>
    
    <div class="flex margin-v-2x space-h">
        <div class="flex-auto">
            <button class="uniformButton text-nowrap" id="example-1">Toggle Example</button>
            
            <script>
                document.getElementById('example-1').addEventListener('click', function (e) {
                    e.currentTarget.uniformPopover.toggle()
                })
                document.addEventListener('DOMContentLoaded', function () {
                    new window.Uniform.Popover({
                        anchor: document.getElementById('example-1'),
                        content: '<div class="bg-green-20 border border-green text-green-80 pad rounded">Example Content</div>'
                    }).render()
                })
            </script>
        </div>
        <div class="flex-fill width-fill overflow-hidden">
            <% code 'javascript', {css_class: 'width-fill overflow-x-scroll'} do %>
                import {Popover} from 'uniform';
                new Popover({
                    anchor: document.getElementById('button'),
                    content: '<div class="bg-green-20 border border-green text-green-80 pad rounded">Example Content</div>'
                }).render()
            <% end %>
        </div>
    </div>
    
    <h3 class="margin-none">Options</h3>
    <div class="border border-gray-30 bg-white rounded">
        <table class="uniformTable align-top-*">
            <thead>
            <tr>
                <th>Option</th>
                <th>Type</th>
                <th>Description</th>
                <th>Default</th>
                <th></th>
            </tr>
            </thead>
            <tr>
                <td class="text-nowrap"><code>anchor</code></td>
                <td class="text-nowrap"><code>Element</code></td>
                <td>Element to anchor content to.</td>
                <td></td>
                <td class="text-nowrap"><span class="uniformLabel -red">REQUIRED</span></td>
            </tr>
            <tr>
                <td class="text-nowrap"><code>content</code></td>
                <td>HTML</td>
                <td>HTML to render into popover.</td>
                <td></td>
                <td class="text-nowrap"><span class="uniformLabel -red">REQUIRED</span></td>
            </tr>
            <tr>
                <td class="text-nowrap"><code>align</code></td>
                <td>String</td>
                <td><code>[left|right|center|#px] [top|center|bottom|#px]</code></td>
                <td><code>'center&nbsp;bottom'</code></td>
                <td class="text-nowrap"><span class="uniformLabel">OPTIONAL</span></td>
            </tr>
            <tr>
                <td class="text-nowrap"><code>zIndex</code></td>
                <td>Int</td>
                <td>Adjust the default zIndex</td>
                <td></td>
                <td class="text-nowrap"><span class="uniformLabel">OPTIONAL</span></td>
            </tr>
            <tr>
                <td class="text-nowrap"><code>offset</code></td>
                <td>String</td>
                <td>Number of pixels to alter location after alignment. <code>{left: #px, top: #px}</code></td>
                <td><code>{left:&nbsp;0,&nbsp;top:&nbsp;0}</code></td>
                <td class="text-nowrap"><span class="uniformLabel">OPTIONAL</span></td>
            </tr>
            <tr>
                <td class="text-nowrap"><code>container</code></td>
                <td><code>Element</code></td>
                <td>Element to append popover to</td>
                <td><code>document</code></td>
                <td class="text-nowrap"><span class="uniformLabel">OPTIONAL</span></td>
            </tr>
            <tr>
                <td class="text-nowrap"><code>transition</code></td>
                <td>String</td>
                <td>Class to generate transition effect. Reference <a href="/utilities/effects#transition-pre-built">pre-built transitions</a></td>
                <td><code>false</code></td>
                <td class="text-nowrap"><span class="uniformLabel">OPTIONAL</span></td>
            </tr>
        </table>
    </div>
</div>
<div class="section">
    <h1>Alignment</h1>
    <table class="uniformTable">
        <% ['left', 'center', 'right'].each do |horizontal| %>
            <% ['top', 'center', 'bottom'].each do |vertical| %>
            <tr>
                <td>
                    <button class="js-example uniformButton" data-align="<%= horizontal %> <%= vertical %>"><%= horizontal %> <%= vertical %></button>
                </td>
                <td>
                    <code>align: '<%= horizontal %> <%= vertical %>'</code>
                </td>
            </tr>
            <% end %>
        <% end %>
    </table>
    <script>
        document.querySelectorAll('.js-example').forEach(el => {
            el.addEventListener('click', function (e) {
                if(e.currentTarget.uniformPopover) {
                    e.currentTarget.uniformPopover.toggle()
                } else {
                    new window.Uniform.Popover({
                        anchor: el,
                        align: el.dataset.align,
                        content: '<div class="bg-green-20 border border-green text-green-80 pad rounded">' + el.dataset.align + '</div>'
                    }).render()
                }
            })
        })
    </script>
</div>

<div class="section">
    <h1>Transition</h1>
    <table class="uniformTable">
        <% ['up', 'down', 'left', 'right'].each do |direction| %>
            <tr>
                <td>
                    <button class="js-example-3 uniformButton" data-transition="transition-fade-<%= direction %>">transition-fade-<%= direction %></button>
                </td>
                <td>
                    <code>transition: 'transition-fade-<%= direction %>'</code>
                </td>
            </tr>
        <% end %>
    </table>
    <script>
        document.querySelectorAll('.js-example-3').forEach(el => {
            el.addEventListener('click', function (e) {
                if(e.currentTarget.uniformPopover) {
                    e.currentTarget.uniformPopover.toggle()
                } else {
                    new window.Uniform.Popover({
                        anchor: el,
                        align: 'center top',
                        transition: el.dataset.transition,
                        content: '<div class="bg-green-20 border border-green text-green-80 pad rounded">' + el.dataset.transition + '</div>'
                    }).render()
                }
            })
        })
    </script>
</div>

<div class="section">
    <h1>uniformPointer</h1>
    <p class="margin-v-2x text-xl text-light">
        Add class <code>-pointer</code> and/or <code>-pointer-[top|bottom|right|left]</code> to show a pointer that uses background and border of Popover
    </p>
    <table class="uniformTable">
        <% [
            ['top', 'center bottom'],
            ['bottom', 'center top'],
            ['right', 'left center'],
            ['left', 'right center']
        ].each do |example| %>
            <% direction, align = example %>
            <tr>
                <td>
                    <button class="js-example-2 uniformButton" data-align="<%= align %>" data-direction="<%= direction %>"><%= direction %></button>
                </td>
                <td>
                    <code>class: 'uniformPointer -<%= direction %>'</code>
                </td>
            </tr>
        <% end %>
    </table>
    <script>
        document.querySelectorAll('.js-example-2').forEach(el => {
            el.addEventListener('click', function (e) {
                if(e.currentTarget.uniformPopover) {
                    e.currentTarget.uniformPopover.toggle()
                } else {
                    new window.Uniform.Popover({
                        anchor: el,
                        class: 'uniformPointer -' + el.dataset.direction + ' bg-green bg-opacity-80 border border-green-90 pad',
                        align: el.dataset.align,
                        content: 'Example Content'
                    }).render()
                }
            })
        })
    </script>
</div>