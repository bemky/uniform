<div class="section">
    <h1>
        Select
        <span class="uniformLabel -yellow-60">JS</span>
    </h1>
    <p class="text-xl text-light margin-v-2x">
        Render an element that mimics a select box but is more full featured in design abilities,
        while maintaining the html simplicity of a basic select element.
    </p>
    
    <div class="flex space-h margin-v-2x">
        <div class="text-nowrap">
            <div id="example"></div>
            <script>
                document.addEventListener('DOMContentLoaded', function(){
                    const el = document.getElementById('example')
                    const select = new window.Uniform.Select({
                        name: 'account_type',
                        options: [
                            "Employee",
                            "Manager",
                            "General Manager"
                        ]
                    })
                    el.append(select.el)
                    select.render()
                })
            </script>
        </div>
        <div class="flex-fill width-fill overflow-hidden">
            <% code 'javascript', {css_class: 'overflow-y-scroll width-fill'} do %>
                import {Select} from 'uniform';
                const select = new Select({
                    name: 'account_type',
                    options: [
                        "Employee",
                        "Manager",
                        "General Manager"
                    ]
                })
                document.append(select.el)
                select.render()
            <% end %>
        </div>
    </div>
    
    <h3>Options</h3>
    <div class="border border-gray-30 bg-white rounded">
        <table class="uniformTable align-top-*">
            <tr>
                <th></th>
                <th>Option</th>
                <th>Type</th>
                <th>Description</th>
                <th>Default</th>
            </tr>
            <tr>
                <td>
                </td>
                <td>
                    <code>options</code>
                </td>
                <td>
                    Array
                </td>
                <td>
                    Options for selection. Each item in array can be string, array, or object
                    <% code 'javascript', {css_class: 'width-100-px text-xs tight'} do %>
                        ["Employee", "Manager", "General Manager"]
                        // - or -
                        [
                          ["Employee", "employee", false],
                          ["Manager", "manager", false],
                          ["General Manager", "general_manager", true],
                        ]
                        // - or -
                        [
                          {value: "employee", text: 'Employee', selected: false},
                          {value: "manager", text: 'Manager', selected: false},
                          {value: "general_manager", text: 'General Manager', selected: true}
                        ]
                    <% end %>
                </td>
                <td>
                    <code>false</code>
                </td>
            </tr>
            <tr>
                <td>
                    <div id="example-2"></div>
                    <script>
                        document.addEventListener('DOMContentLoaded', function(){
                            const el = document.getElementById('example-2')
                            const select = new window.Uniform.Select({
                                name: 'account_type_2',
                                multiple: true,
                                value: 'Manager',
                                options: [
                                    "Employee",
                                    {text: "Manager", selected: true},
                                    "General Manager"
                                ]
                            })
                            el.append(select.el)
                            select.render()
                        })
                    </script>
                </td>
                <td>
                    <code>multiple</code>
                </td>
                <td>
                    Boolean
                </td>
                <td>
                    Make the select a multiple select
                </td>
                <td>
                    <code>false</code>
                </td>
            </tr>
            <tr>

                <td>
                    <div id="example-3"></div>
                    <script>
                        document.addEventListener('DOMContentLoaded', function(){
                            const el = document.getElementById('example-3')
                            const select = new window.Uniform.Select({
                                name: 'account_type_3',
                                limit: 3,
                                options: [
                                    "Employee",
                                    "Manager",
                                    "General Manager",
                                    "Boss Man",
                                    "Contractor",
                                    "Counsel",
                                    "Angel",
                                    "Guardian"
                                ]
                            })
                            el.append(select.el)
                            select.render()
                        })
                    </script>
                </td>
                <td>
                    <code>limit</code>
                </td>
                <td class="text-nowrap">
                    Integer, Boolean
                </td>
                <td>
                    Limit number of visilbe options. Set to false to not limit.
                </td>
                <td>
                    8
                </td>
            </tr>
            <tr>
                <td></td>
                <td class="text-nowrap"><code>class, name, id, value</code></td>
                <td>String</td>
                <td>Accepts any html attribute that is then rendered on the select element and rendered element.</td>
                <td></td>
            </tr>
        </table>
    </div>
</div>